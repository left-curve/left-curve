name: Rust


on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "develop"
    paths:
      - ".github/workflows/rust.yml"
      - "dango/**"
      - "grug/**"
      - "hyperlane/**"
      - "indexer/**"
      - "**.toml"
  pull_request:
    branches:
      - "*"
    paths:
      - ".github/workflows/rust.yml"
      - "dango/**"
      - "grug/**"
      - "hyperlane/**"
      - "indexer/**"
      - "**.toml"

jobs:
  test:
    needs: [format]
    name: Test + Lint
    runs-on: self-hosted
    container:
      image: rust:slim
    env:
      PGDATABASE: grug_test
      DB_HOST: postgres
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      # - name: Create database
      #   run: |
      #     createdb -U postgres -h postgres "$PGDATABASE"

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --all-features
        env:
          RUST_BACKTRACE: 1

      - name: Run clippy
        run: cargo clippy --bins --tests --benches --examples --all-features --all-targets -- -D warnings

  format:
    name: Format
    runs-on: self-hosted
    container:
      image: rust:slim
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run rustfmt checks
        run: cargo +nightly fmt --check --all
