name: Portal Deployment

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GIT_COMMIT: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "ui/testnet"
      - "ui/release"
    paths:
      - ".github/workflows/portal-deployment.yaml"
      - "sdk/**"
      - "ui/store/**"
      - "ui/portal/**"
      - "ui/applets/**"
  pull_request:
    paths:
      - ".github/workflows/portal-deployment.yaml"
      - "sdk/**"
      - "ui/store/**"
      - "ui/portal/**"
      - "ui/applets/**"

jobs:
  deploy:
    permissions:
      contents: read
      packages: read
      deployments: write
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm i --frozen-lockfile
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_NPM }}

      - name: Build Portal
        run: pnpm build:portal-web
        env:
          CONFIG_ENVIRONMENT: ${{ github.ref_name == 'ui/testnet' && 'test' || github.ref_name == 'ui/release' && 'prod' || 'dev' }}
          PUBLIC_WEBRTC_URI: ${{ secrets.PUBLIC_WEBRTC_URI }}
          PUBLIC_SENTRY_DSN: ${{ secrets.PUBLIC_SENTRY_DSN }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Uploading to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          wranglerVersion: "3"
          apiToken: ${{ secrets.CF_TOKEN }}
          accountId: 9f30716e11f27c296dfbadb7b7571ae6
          projectName: dango-portal
          directory: ./ui/portal/web/build
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${GITHUB_REF##*/}
  docker-build:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        runner:
          [self-hosted]
          # when needing to try on all runner types
          # - [self-hosted, Linux]
          # - [self-hosted, macOS]
    name: Build ${{ matrix.arch }} on ${{ join(matrix.runner, ', ') }}
    runs-on: ${{ matrix.runner }}
    env:
      GITHUB_USER: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}

      - name: Set build config
        id: config
        run: |
          set -euo pipefail
          if [[ "${{ matrix.arch }}" == "amd64" ]]; then
            echo "target=x86_64-unknown-linux-gnu" >> $GITHUB_OUTPUT
            echo "platform=linux/amd64" >> $GITHUB_OUTPUT
            echo "suffix=amd64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
            echo "target=aarch64-unknown-linux-gnu" >> $GITHUB_OUTPUT
            echo "platform=linux/arm64" >> $GITHUB_OUTPUT
            echo "suffix=arm64" >> $GITHUB_OUTPUT
          else
              echo "Unsupported matrix ${{ matrix.arch }}"
              exit 1
          fi

      - name: build docker image
        run: |
          set -euo pipefail
          docker buildx build \
            --push \
            --platform ${{ steps.config.outputs.platform }} \
            --build-arg TARGET_ARCH=${{ steps.config.outputs.target }} \
            --build-arg GIT_COMMIT=${{ env.GIT_COMMIT }} \
            --build-arg GITHUB_TOKEN=${{ env.GITHUB_TOKEN }} \
            --provenance=false \
            -t ghcr.io/left-curve/left-curve/dango-frontend:${{ env.GIT_COMMIT }}-${{ steps.config.outputs.suffix }} \
            -f docker/dango-frontend/Dockerfile .
