name: Cross Build Dango

env:
  COMETBFT_GIT_TAG: v0.38.17
  GIT_COMMIT: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  manifest:
    needs: [build-arm64, build-amd64]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch Docker manifest
        run: |
          docker manifest create ghcr.io/left-curve/left-curve/dango:${{ env.GIT_COMMIT }} \
            --amend ghcr.io/left-curve/left-curve/dango:${{ env.GIT_COMMIT }}-amd64 \
            --amend ghcr.io/left-curve/left-curve/dango:${{ env.GIT_COMMIT }}-arm64

          docker manifest push ghcr.io/left-curve/left-curve/dango:${{ env.GIT_COMMIT }}

  build-arm64:
    runs-on: [self-hosted]
    strategy:
      matrix:
        include:
          # Linux self-hosted runner
          - runner_labels: [self-hosted, linux]
            arch: x86_64
            target: aarch64-unknown-linux-gnu
            platform: linux/arm64
            suffix: arm64
            image: ghcr.io/left-curve/left-curve/cross-builder:arm64

          # Mac self-hosted runner
          - runner_labels: [self-hosted, macos]
            arch: arm64
            target: aarch64-unknown-linux-gnu
            platform: linux/arm64
            suffix: arm64
            image: ghcr.io/left-curve/left-curve/native-builder:arm64
    steps:
      - uses: actions/checkout@v4

      - name: Install cross
        run: cargo install cross

      - name: Write dynamic Cross.toml
        run: |
          echo "[target.${{ matrix.target }}]" > Cross.toml
          echo "image = \"${{ matrix.image }}\"" >> Cross.toml

      - name: Prepare git_info.rs
        run: |
          cp dango/cli/src/git_info.rs dango/cli/src/git_info.rs.in
          sed "s/{{GIT_COMMIT}}/$GIT_COMMIT/" dango/cli/src/git_info.rs.in > dango/cli/src/git_info.rs
          rm dango/cli/src/git_info.rs.in

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v4
        with:
          path: |
            .cross-cache
          key: cross-cache-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Dango with cross and local cache
        run: |
          mkdir -p .cross-cache/${{ matrix.target }}
          CROSS_TARGET_CACHE=$(pwd)/.cross-cache/${{ matrix.target }} \
          cross build --target ${{ matrix.target }} --release

      - name: Build Dango docker image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --build-arg TARGET_ARCH=${{ matrix.target }} \
            --build-arg GIT_COMMIT=${{ env.GIT_COMMIT }} \
            --push \
            --provenance=false \
            -t ghcr.io/left-curve/left-curve/dango:${{ env.GIT_COMMIT }}-${{ matrix.suffix }} \
            -f docker/dango/Dockerfile .

  build-amd64:
    runs-on: [self-hosted]
    strategy:
      matrix:
        include:
          # Linux self-hosted runner
          - runner_labels: [self-hosted, linux]
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            platform: linux/amd64
            suffix: amd64
            image: ghcr.io/left-curve/left-curve/native-builder:amd64

          # Mac self-hosted runner
          - runner_labels: [self-hosted, macos]
            arch: arm64
            target: x86_64-unknown-linux-gnu
            platform: linux/amd64
            suffix: amd64
            image: ghcr.io/left-curve/left-curve/cross-builder:amd64

    steps:
      - uses: actions/checkout@v4

      - name: Install cross
        run: cargo install cross

      - name: Write dynamic Cross.toml
        run: |
          echo "[target.${{ matrix.target }}]" > Cross.toml
          echo "image = \"${{ matrix.image }}\"" >> Cross.toml

      - name: Prepare git_info.rs
        run: |
          cp dango/cli/src/git_info.rs dango/cli/src/git_info.rs.in
          sed "s/{{GIT_COMMIT}}/$GIT_COMMIT/" dango/cli/src/git_info.rs.in > dango/cli/src/git_info.rs
          rm dango/cli/src/git_info.rs.in

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v4
        with:
          path: |
            .cross-cache
          key: cross-cache-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Dango with cross and local cache
        run: |
          mkdir -p .cross-cache/${{ matrix.target }}
          CROSS_TARGET_CACHE=$(pwd)/.cross-cache/${{ matrix.target }} \
          cross build --target ${{ matrix.target }} --release

      - name: Build Dango docker image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --build-arg TARGET_ARCH=${{ matrix.target }} \
            --build-arg GIT_COMMIT=${{ env.GIT_COMMIT }} \
            --push \
            --provenance=false \
            -t ghcr.io/left-curve/left-curve/dango:${{ env.GIT_COMMIT }}-${{ matrix.suffix }} \
            -f docker/dango/Dockerfile .
