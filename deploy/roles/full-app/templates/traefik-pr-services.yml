http:
  middlewares:
    {{ dango_network }}-graphiql-stripprefix:
      stripPrefix:
        prefixes:
          - "/graphiql"
    {{ dango_network }}-cors-dango:
      headers:
        accessControlAllowOriginList:
          - https://dev.dango.exchange
          - https://dango.exchange
          - https://*.dango-portal.pages.dev
          - http://api.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}
          - http://api-{{ dango_network }}.{{ dango_domain }}
          - https://api.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}
          - https://api-{{ dango_network }}.{{ dango_domain }}
          - http://www.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}
          - http://www-{{ dango_network }}.{{ dango_domain }}
          - https://www.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}
          - https://www-{{ dango_network }}.{{ dango_domain }}
        accessControlAllowMethods: ["GET","POST","OPTIONS"]
        accessControlAllowHeaders: ["*"]
        accessControlAllowCredentials: true
        addVaryHeader: true

  services:
    {{ dango_network }}-dango:
      loadBalancer:
        servers:
          - url: "http://{{ deployment_name }}-dango-1:8080"
    {{ dango_network }}-frontend:
      loadBalancer:
        servers:
          - url: "http://{{ deployment_name }}-dango-frontend-1:80"
    {{ dango_network }}-faucet_bot:
      loadBalancer:
        servers:
          - url: "http://{{ deployment_name }}-faucet-bot-1:8082"
    {{ dango_network }}-graphiql:
      loadBalancer:
        servers:
          - url: "http://{{ deployment_name }}-graphiql-1:80"

  routers:
    {{ dango_network }}-main-graphiql:
      rule: "(Host(`api.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)) && PathPrefix(`/graphiql`)"
      entryPoints:
        - "web"
      service: "{{ dango_network }}-graphiql"
      middlewares:
        - "{{ dango_network }}-graphiql-stripprefix"

    {{ dango_network }}-main-graphiql-ssl:
      rule: "(Host(`api.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)) && PathPrefix(`/graphiql`)"
      entryPoints:
        - "websecure"
      tls:
        certResolver: letsencrypt
      service: "{{ dango_network }}-graphiql"
      middlewares:
        - "{{ dango_network }}-graphiql-stripprefix"

    {{ dango_network }}-main-frontend:
      rule: "Host(`www.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)"
      entryPoints:
        - "web"
      service: "{{ dango_network }}-frontend"

    {{ dango_network }}-main-frontend-ssl:
      rule: "Host(`www.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)"
      entryPoints:
        - "websecure"
      tls:
        certResolver: letsencrypt
      service: "{{ dango_network }}-frontend"

    {{ dango_network }}-main-backend:
      rule: "Host(`api.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)"
      entryPoints:
        - "web"
      service: "{{ dango_network }}-dango"
      middlewares:
        - "{{ dango_network }}-cors-dango"

    {{ dango_network }}-main-backend-ssl:
      rule: "Host(`api.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)"
      entryPoints:
        - "websecure"
      tls:
        certResolver: letsencrypt
      service: "{{ dango_network }}-dango"
      middlewares:
        - "{{ dango_network }}-cors-dango"

    {{ dango_network }}-main-faucet_bot:
      rule: "Host(`faucet.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)"
      entryPoints:
        - "web"
      service: "{{ dango_network }}-faucet_bot"
      middlewares:
        - "{{ dango_network }}-cors-dango"

    {{ dango_network }}-main-faucet_bot-ssl:
      rule: "Host(`faucet.{{ dango_network }}.{{ hostname }}.{{ dango_domain }}`)"
      entryPoints:
        - "websecure"
      tls:
        certResolver: letsencrypt
      service: "{{ dango_network }}-faucet_bot"
      middlewares:
        - "{{ dango_network }}-cors-dango"
