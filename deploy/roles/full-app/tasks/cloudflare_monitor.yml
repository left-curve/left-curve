# expects: mon (name,path,expect), cf_monitors, cloudflare_account_id, cloudflare_api_token

- name: Find existing monitor by name+path
  set_fact:
    existing_mon: >-
      {{
        (cf_monitors.json.result
         | selectattr('description','equalto', mon.name)
         | selectattr('path','equalto', mon.path)
         | list | first) | default(None)
      }}

- name: Derive existing monitor id safely
  set_fact:
    existing_id: "{{ (existing_mon is mapping) | ternary(existing_mon.id, omit) }}"

- name: Create monitor if missing
  when: existing_id is not defined
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/load_balancers/monitors"
    method: POST
    headers:
      Authorization: "Bearer {{ cloudflare_api_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "https"
      method: "GET"
      path: "{{ mon.path }}"
      expected_codes: "{{ mon.expect }}"
      interval: 60
      timeout: 5
      retries: 2
      description: "{{ mon.name }}"
  register: create_mon

- name: Expose monitor id fact per service
  set_fact:
    "monitor_id_{{ mon.name }}": "{{ existing_id | default(create_mon.json.result.id) }}"

- debug:
    msg:
      name: "{{ mon.name }}"
      path: "{{ mon.path }}"
      existing_id: "{{ existing_id | default('none') }}"
      created_id: "{{ (create_mon.json.result.id if create_mon is defined else 'n/a') }}"
