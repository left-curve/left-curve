- set_fact:
    pr_tunnel_name: "pr-{{ github_pr_number }}-{{ hostname }}"

# find
- uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/cfd_tunnel?name={{ pr_tunnel_name }}"
    method: GET
    headers: { Authorization: "Bearer {{ cloudflare_api_token }}" }
  register: list_resp

# create if missing
- uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/cfd_tunnel"
    method: POST
    headers:
      Authorization: "Bearer {{ cloudflare_api_token }}"
      Content-Type: "application/json"
    body_format: json
    body: { name: "{{ pr_tunnel_name }}", config_src: "cloudflare" }
  register: create_resp
  when: (list_resp.json.result | length) == 0

# set tunnel_id
- set_fact:
    pr_tunnel_id: >-
      {{ (list_resp.json.result[0].id
          if (list_resp.json.result | length) > 0
          else create_resp.json.result.id) }}

# fetch token
- uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/cfd_tunnel/{{ pr_tunnel_id }}/token"
    method: GET
    headers: { Authorization: "Bearer {{ cloudflare_api_token }}" }
  register: token_resp

# set token (string or object-safe)
- set_fact:
    pr_tunnel_token: >-
      {{ token_resp.json.result
         if (token_resp.json.result is string)
         else token_resp.json.result.token }}

# (optional) derive id from token if you didnâ€™t keep pr_tunnel_id
- set_fact:
    pr_tunnel_id: "{{ (pr_tunnel_token | b64decode | from_json).t }}"
  when: pr_tunnel_id is not defined
