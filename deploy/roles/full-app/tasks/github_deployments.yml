- name: Create GitHub deployments
  uri:
    url: "https://api.github.com/repos/left-curve/left-curve/deployments"
    method: POST
    headers:
      Authorization: "token {{ ghcr_token }}"
      Accept: "application/vnd.github.v3+json"
    body_format: json
    body:
      ref: "{{ github_sha }}"
      environment: "pr-{{ github_pr_number }}-{{ item.name }}"
      description: "{{ item.description }} for PR {{ github_pr_number }}"
      auto_merge: false
      required_contexts: []
    status_code: [200, 201]
  register: deployment_results
  loop:
    - { name: "dango-frontend", description: "Frontend", url: "http://{{ tailscale_ip }}:{{ dango_frontend_port }}" }
    - { name: "dango-api", description: "Dango API", url: "http://{{ tailscale_ip }}:{{ dango_port }}" }
    - { name: "dango-metrics", description: "Dango Metrics", url: "http://{{ tailscale_ip }}:{{ dango_metrics_port }}" }
    - { name: "faucet-bot", description: "Faucet", url: "http://{{ tailscale_ip }}:{{ faucet_port }}" }
    - { name: "cometbft-p2p", description: "CometBFT P2P", url: "http://{{ tailscale_ip }}:{{ cometbft_p2p_port }}" }
    - { name: "cometbft-rpc", description: "CometBFT RPC", url: "http://{{ tailscale_ip }}:{{ cometbft_rpc_port }}" }
    - { name: "cometbft-abci", description: "CometBFT ABCI", url: "http://{{ tailscale_ip }}:{{ cometbft_abci_port }}" }
    - { name: "cometbft-metrics", description: "CometBFT metrics", url: "http://{{ tailscale_ip }}:{{ cometbft_metrics_port }}" }

- name: Set deployment statuses
  uri:
    url: "https://api.github.com/repos/left-curve/left-curve/deployments/{{ item.json.id }}/statuses"
    method: POST
    headers:
      Authorization: "token {{ ghcr_token }}"
      Accept: "application/vnd.github.v3+json"
    body_format: json
    body:
      state: "success"
      target_url: "{{ deployment_results.results[ansible_loop.index0].item.url }}"
      description: "{{ deployment_results.results[ansible_loop.index0].item.description }} ready"
      environment_url: "{{ deployment_results.results[ansible_loop.index0].item.url }}"
    status_code: [200, 201]
  loop: "{{ deployment_results.results }}"
  loop_control:
    extended: true
  when: deployment_results.results is defined

- name: Add deployment summary to GitHub
  delegate_to: localhost
  connection: local
  become: false
  shell: |
    cat >> $GITHUB_STEP_SUMMARY << 'EOF'
    # ðŸš€ PR Deployment Summary
    | Name | Result |
    | ---- | ------ |
    | **Status** | âœ… |
    | **Dango Frontend** | [http://{{ tailscale_ip }}:{{ dango_frontend_port }}](http://{{ tailscale_ip }}:{{ dango_frontend_port }}) |
    | **Dango GraphQL** | [http://{{ tailscale_ip }}:{{ dango_port }}/graphql](http://{{ tailscale_ip }}:{{ dango_port }}/graphql) |
    | **Dango metrics** | [http://{{ tailscale_ip }}:{{ dango_metrics_port }}/graphql](http://{{ tailscale_ip }}:{{ dango_metrics_port }}) |
    | **Faucet bot** | [http://{{ tailscale_ip }}:{{ faucet_port }}](http://{{ tailscale_ip }}:{{ faucet_port }}) |
    | **CometBFT P2P** | [http://{{ tailscale_ip }}:{{ cometbft_p2p_port }}](http://{{ tailscale_ip }}:{{ cometbft_p2p_port }}) |
    | **CometBFT RPC** | [http://{{ tailscale_ip }}:{{ cometbft_rpc_port }}](http://{{ tailscale_ip }}:{{ cometbft_rpc_port }}) |
    | **CometBFT ABCI** | [http://{{ tailscale_ip }}:{{ cometbft_abci_port }}](http://{{ tailscale_ip }}:{{ cometbft_abci_port }}) |
    | **CometBFT Metrics** | [http://{{ tailscale_ip }}:{{ cometbft_metrics_port }}](http://{{ tailscale_ip }}:{{ cometbft_metrics_port }}) |
    | **Deployment name** | `{{ deployment_name }}` |
    | **Commit** | `{{ github_sha }}` |
    EOF
