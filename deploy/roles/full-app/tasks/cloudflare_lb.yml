- name: Get all monitors
  run_once: true
  become: false
  delegate_to: localhost
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/load_balancers/monitors"
    method: GET
    headers: { Authorization: "Bearer {{ cloudflare_api_token }}" }
  register: cf_monitors

- debug: var=cf_monitors.json.result
  run_once: true
  become: false
  delegate_to: localhost

- name: Create monitors
  include_tasks: cloudflare_monitor.yml
  loop: "{{ monitor_defs }}"
  loop_control:
    loop_var: mon

- name: Refresh monitors after creation
  run_once: true
  become: false
  delegate_to: localhost
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/load_balancers/monitors"
    method: GET
    headers: { Authorization: "Bearer {{ cloudflare_api_token }}" }
  register: cf_monitors

- name: Build monitor id map by name
  run_once: true
  become: false
  delegate_to: localhost
  set_fact:
    monitor_id_map: "{{ dict(cf_monitors.json.result | map(attribute='description') | zip(cf_monitors.json.result | map(attribute='id'))) }}"

- name: Get all pools
  run_once: true
  become: false
  delegate_to: localhost
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/load_balancers/pools"
    method: GET
    headers: { Authorization: "Bearer {{ cloudflare_api_token }}" }
  register: cf_pools

- debug: var=cf_pools.json.result
  run_once: true
  become: false
  delegate_to: localhost

- name: Create pools for services
  vars:
    pool: { name: "{{ service }}" }
  include_tasks: cloudflare_pool.yml
  loop: "{{ monitor_defs | map(attribute='name') | unique | list }}"
  loop_control:
    loop_var: service

# Zone-scoped Load Balancers
- name: Ensure Cloudflare zone id
  run_once: true
  become: false
  delegate_to: localhost
  when: cloudflare_zone_id is not defined
  block:
    - name: Lookup Cloudflare zone by name
      uri:
        url: "https://api.cloudflare.com/client/v4/zones?name={{ dango_domain }}"
        method: GET
        headers:
          Authorization: "Bearer {{ cloudflare_api_token }}"
          Content-Type: "application/json"
      register: zone_info

    - name: Set Cloudflare zone id
      set_fact:
        cloudflare_zone_id: "{{ zone_info.json.result[0].id }}"

- name: Get all load balancers
  run_once: true
  become: false
  delegate_to: localhost
  uri:
    url: "https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone_id }}/load_balancers"
    method: GET
    headers: { Authorization: "Bearer {{ cloudflare_api_token }}" }
  register: cf_load_balancers

- debug: var=cf_load_balancers.json.result
  run_once: true
  become: false
  delegate_to: localhost

# - name: Create CF LBs
#   vars:
#     nets: [devnet, mainnet]
#     services: [www, api, faucet]
#   loop: "{{ services | product(nets) | list }}"
#   uri:
#     url: "https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone_id }}/load_balancers"
#     method: POST
#     headers:
#       Authorization: "Bearer {{ cloudflare_api_token }}"
#       Content-Type: "application/json"
#     body_format: json
#     body:
#       name: "{{ item.0 }}-{{ item.1 }}.{{ dango_domain }}"
#       default_pools:
#         - "pool-{{ item.0 }}-{{ item.1 }}-ovh1"
#         - "pool-{{ item.0 }}-{{ item.1 }}-ovh2"
#       fallback_pool: "pool-{{ item.0 }}-{{ item.1 }}-ovh1"
#       proxied: true
#       steering_policy: "weighted"
#       session_affinity: "cookie"
#       session_affinity_attributes: { ttl: 3600 }
#   failed_when: monitor_create.status not in [200,409]
