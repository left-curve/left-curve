- name: Collect containers for this compose project
  community.docker.docker_host_info:
    containers: true
    verbose_output: true
    containers_filters:
      label:
        - "com.docker.compose.project={{ deployment_name }}"
  register: hostinfo
  failed_when: false
  changed_when: false

- name: Wait until all containers are healthy
  community.docker.docker_host_info:
    containers: true
    verbose_output: true
    containers_filters:
      label:
        - "com.docker.compose.project={{ deployment_name }}"
  register: hostinfo
  failed_when: false
  changed_when: false
  until: >
    hostinfo.containers is defined and
    (hostinfo.containers | length) > 0 and
    (
      (hostinfo.containers
        | selectattr('State.Health','defined')
        | selectattr('State.Health.Status','!=','healthy')
        | list | length) == 0
    ) and (
      (hostinfo.containers
        | rejectattr('State.Health','defined')
        | selectattr('State.Status','!=','running')
        | list | length) == 0
    )
  retries: 10
  delay: 1

- name: Show container health
  debug:
    msg: "{{ (item.Names[0] | regex_replace('^/','')) }} -> {{ item.State.Health.Status | default(item.State.Status) }}"
  loop: "{{ hostinfo.containers }}"
