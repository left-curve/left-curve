- name: Create preview environments
  uri:
    url: "https://api.github.com/repos/left-curve/left-curve/environments/preview-{{ item }}"
    method: PUT
    headers:
      Authorization: "token {{ ghcr_token }}"
      Accept: "application/vnd.github.v3+json"
    body_format: json
    body:
      wait_timer: 0
      reviewers: []
      deployment_branch_policy: null
    status_code: [200, 201]
  failed_when: false
  loop:
    - "dango-frontend"
    - "dango-api"
    - "dango-metrics"
    - "faucet-bot"
    - "cometbft-p2p"
    - "cometbft-rpc"
    - "cometbft-abci"
    - "cometbft-metrics"

- name: Create GitHub deployments
  uri:
    url: "https://api.github.com/repos/left-curve/left-curve/deployments"
    method: POST
    headers:
      Authorization: "token {{ ghcr_token }}"
      Accept: "application/vnd.github.v3+json"
    body_format: json
    body:
      ref: "{{ github_sha }}"
      environment: "preview-{{ item.name }}"
      description: "PR {{ github_pr_number }} - {{ item.description }}"
      auto_merge: false
      required_contexts: []
    status_code: [200, 201]
  register: deployment_results
  failed_when: false
  loop:
    - { name: "dango-frontend", description: "Frontend", url: "https://www-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}" }
    - { name: "dango-api", description: "Dango API", url: "https://api-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/graphql" }
    - { name: "dango-graphiql", description: "Dango GraphiQL", url: "https://api-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/graphiql" }
    - { name: "dango-metrics", description: "Dango Metrics", url: "http://{{ tailscale_ip }}:{{ dango_metrics_port }}" }
    - { name: "faucet-bot", description: "Faucet", url: "https://faucet-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/mint" }
    - { name: "cometbft-p2p", description: "CometBFT P2P", url: "http://{{ tailscale_ip }}:{{ cometbft_p2p_port }}" }
    - { name: "cometbft-rpc", description: "CometBFT RPC", url: "http://{{ tailscale_ip }}:{{ cometbft_rpc_port }}" }
    - { name: "cometbft-abci", description: "CometBFT ABCI", url: "http://{{ tailscale_ip }}:{{ cometbft_abci_port }}" }
    - { name: "cometbft-metrics", description: "CometBFT metrics", url: "http://{{ tailscale_ip }}:{{ cometbft_metrics_port }}" }

- name: Set deployment statuses
  uri:
    url: "https://api.github.com/repos/left-curve/left-curve/deployments/{{ item.json.id }}/statuses"
    method: POST
    headers:
      Authorization: "token {{ ghcr_token }}"
      Accept: "application/vnd.github.v3+json"
    body_format: json
    body:
      state: "success"
      target_url: "{{ deployment_results.results[ansible_loop.index0].item.url }}"
      description: "{{ deployment_results.results[ansible_loop.index0].item.description }} ready"
      environment_url: "{{ deployment_results.results[ansible_loop.index0].item.url }}"
    status_code: [200, 201]
  loop: "{{ deployment_results.results }}"
  loop_control:
    extended: true
  when:
    - deployment_results.results is defined
    - item.json is defined
    - item.json.id is defined

- name: Add deployment summary to GitHub
  when: lookup('env', 'GITHUB_STEP_SUMMARY') != ''
  delegate_to: localhost
  connection: local
  become: false
  shell: |
    cat >> $GITHUB_STEP_SUMMARY << 'EOF'
    # ðŸš€ PR Deployment Summary ({{ hostname }})
    | Name | Result |
    | ---- | ------ |
    | **Status** | âœ… |
    | **Dango Frontend** | [https://www-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}](https://www-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}) |
    | **Dango GraphQL** | [https://api-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/graphql](https://api-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/graphql) |
    | **Dango GraphiQL** | [https://api-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/graphiql](https://api-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/graphiql) |
    | **Dango metrics** | [http://{{ tailscale_ip }}:{{ dango_metrics_port }}/metrics](http://{{ tailscale_ip }}:{{ dango_metrics_port }}/metrics) |
    | **Faucet bot** | [https://faucet-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/mint](http://faucet-{{ dango_network }}-{{ hostname }}.{{ dango_domain }}/mint) |
    | **CometBFT P2P** | [http://{{ tailscale_ip }}:{{ cometbft_p2p_port }}](http://{{ tailscale_ip }}:{{ cometbft_p2p_port }}) |
    | **CometBFT RPC** | [http://{{ tailscale_ip }}:{{ cometbft_rpc_port }}](http://{{ tailscale_ip }}:{{ cometbft_rpc_port }}) |
    | **CometBFT ABCI** | [http://{{ tailscale_ip }}:{{ cometbft_abci_port }}](http://{{ tailscale_ip }}:{{ cometbft_abci_port }}) |
    | **CometBFT Metrics** | [http://{{ tailscale_ip }}:{{ cometbft_metrics_port }}/metrics](http://{{ tailscale_ip }}:{{ cometbft_metrics_port }}/metrics) |
    | **Deployment name** | `{{ deployment_name }}` |
    EOF
