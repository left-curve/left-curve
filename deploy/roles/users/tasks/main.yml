- name: Create users
  user:
    name: "{{ item }}"
    shell: /bin/bash
    groups: sudo
    append: yes
    state: present
    create_home: yes
  loop: "{{ ssh_users }}"

- name: Create deploy user
  user:
    name: "{{ deploy_user }}"
    shell: /bin/bash
    groups: sudo
    append: yes
    state: present
    create_home: yes

- name: Ensure .ssh directory exists for ssh_users
  file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: '0700'
  loop: "{{ ssh_users }}"

- name: Copy ssh keys for ssh_users
  authorized_key:
    user: "{{ item }}"
    state: present
    key: "{{ lookup('file', 'authorized_keys/' ~ ssh_key_path) }}"
  vars:
    ssh_key_path: "{{ item }}.pub"
  with_items: "{{ ssh_users }}"

- name: Copy deploy ssh keys user
  authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ lookup('file', 'authorized_keys/' ~ ssh_key_path) }}"
  vars:
    ssh_key_path: "deploy.pub"

- name: Ensure .ssh directory exists for deploy_user
  file:
    path: "/home/{{ deploy_user }}/.ssh"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0700'

- name: Copy ssh keys for deploy_user
  authorized_key:
    user: "{{ deploy_user }}"
    state: present
    key: "{{ lookup('file', 'authorized_keys/' ~ ssh_key_path) }}"
  vars:
    ssh_key_path: "{{ item }}.pub"
  with_items: "{{ ssh_users }}"

- name: Disable SSH root login
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin no'

- name: Disable password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication no'

- name: Ensure only key-based auth is used
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?ChallengeResponseAuthentication'
    line: 'ChallengeResponseAuthentication no'

- name: Allow sudo without password
  lineinfile:
    dest: /etc/sudoers
    line: "{{ item }} ALL=(ALL) NOPASSWD:ALL"
    validate: "/usr/sbin/visudo -cf %s"
    state: present
    regexp: "^{{ item }}\\s+ALL=\\(ALL\\) NOPASSWD:ALL$"
    backup: yes
  with_items: "{{ ssh_users }}"


- name: Reload SSH
  service:
    name: ssh
    state: reloaded
