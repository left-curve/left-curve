- hosts: full-app
  become: true
  become_user: "{{ deploy_user }}"
  vars:
    traefik_dir: "{{ ansible_env.HOME }}/traefik"
    tailscale_iface: tailscale0
    tailscale_ip: "{{ hostvars[inventory_hostname]['ansible_' + tailscale_iface].ipv4.address }}"
    github_sha: "{{ lookup('pipe','git rev-parse HEAD') }}"
    dango_image_tag: "{{ github_sha }}"
    dex_bot_tag: "latest"
    ghcr_user: "{{ lookup('env','GITHUB_USER') }}"
    ghcr_token: "{{ lookup('env','GITHUB_TOKEN') }}"
    timestamp: "{{ ansible_date_time.year }}{{ ansible_date_time.month }}{{ ansible_date_time.day }}{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}"
    deployment_name: "{{ timestamp }}"
    cometbft_node_key: "{{ lookup('env', (dango_network|upper) ~ '_COMETBFT_NODE_KEY') }}"
    cometbft_validator_address: "{{ lookup('env', (dango_network|upper) ~ '_COMETBFT_VALIDATOR_ADDRESS') }}"
    cometbft_validator_public_key: "{{ lookup('env', (dango_network|upper) ~ '_COMETBFT_VALIDATOR_PUB_KEY') }}"
    cometbft_validator_private_key: "{{ lookup('env', (dango_network|upper) ~ '_COMETBFT_VALIDATOR_PRIVATE_KEY') }}"
    dango_host: "dango"
    cometbft_host: "cometbft"
    cometbft_tag: "v0.38.17"
    cometbft_generate_keys: false
    deploy_env: "staging"
    chain_id: "dev-9"
    dango_network: "devnet"
    # When traefik is enabled it will be used for routing, keeping the same port
    traefik_enabled: false
    expose_ports: false
    dex_bot_enabled: false
    github_deployments_enabled: false
    deploy_includes_postgres: true
    delete_postgres_database_at_merge: false
    deploy_includes_clickhouse: true
    delete_clickhouse_database_at_merge: false
    postgres_database: "dango_{{ timestamp }}"
    clickhouse_database: "dango_{{ timestamp }}"
    deployment_dir: "{{ ansible_env.HOME }}/deployments/{{ deployment_name }}"
    pyth_access_token: "{{ lookup('env', 'PYTH_ACCESS_TOKEN') }}"
  collections:
    - community.docker
    - community.clickhouse
  roles:
    - full-app
  pre_tasks:
    - name: Load postgres vars
      include_vars: "roles/full-app/vars/included_postgres.yml"
      when: deploy_includes_postgres
    - name: Load clickhouse vars
      include_vars: "roles/full-app/vars/included_clickhouse.yml"
      when: deploy_includes_clickhouse
  post_tasks:
    - name: Store vars for monitoring
      set_fact:
        stored_deployment_name: "{{ deployment_name }}"
        stored_dango_network: "{{ dango_network }}"
        stored_tailscale_ip: "{{ tailscale_ip }}"
        stored_dango_metrics_port: "{{ dango_metrics_port }}"
        stored_clickhouse_metrics_port: "{{ clickhouse_metrics_port }}"
        stored_cometbft_metrics_port: "{{ cometbft_metrics_port }}"
        stored_db_metrics_port: "{{ db_metrics_port }}"
        stored_deploy_includes_postgres: "{{ deploy_includes_postgres }}"
        stored_deploy_includes_clickhouse: "{{ deploy_includes_clickhouse }}"

- hosts: monitoring
  become: true
  become_user: "{{ deploy_user }}"
  tags: monitoring
  vars:
      deployment_name: "{{ hostvars[groups['full-app'][0]]['stored_deployment_name'] }}"
      dango_network: "{{ hostvars[groups['full-app'][0]]['stored_dango_network'] }}"
      tailscale_ip: "{{ hostvars[groups['full-app'][0]]['stored_tailscale_ip'] }}"
      dango_metrics_port: "{{ hostvars[groups['full-app'][0]]['stored_dango_metrics_port'] }}"
      cometbft_metrics_port: "{{ hostvars[groups['full-app'][0]]['stored_cometbft_metrics_port'] }}"
      db_metrics_port: "{{ hostvars[groups['full-app'][0]]['stored_db_metrics_port'] }}"
      clickhouse_metrics_port: "{{ hostvars[groups['full-app'][0]]['stored_clickhouse_metrics_port'] }}"
      deploy_includes_postgres: "{{ stored_deploy_includes_postgres }}"
      deploy_includes_clickhouse: "{{ stored_deploy_includes_clickhouse }}"
  tasks:
    - block:
        - name: Load prometheus vars
          include_vars: roles/prometheus/defaults/main.yml
        - name: Create Dango prometheus targets
          copy:
            content: |
              - targets: ['{{ tailscale_ip }}:{{ dango_metrics_port }}']
                labels:
                  deployment: '{{ deployment_name }}'
                  service: 'dango'
                  environment: 'preview'
                  dango_network: '{{ dango_network }}'
            dest: "{{ prometheus_dir }}/targets/{{ deployment_name }}-dango.yml"
            owner: "{{ deploy_user }}"
            group: "{{ deploy_user }}"
        - name: Create Cometbft prometheus targets
          copy:
            content: |
              - targets: ['{{ tailscale_ip }}:{{ cometbft_metrics_port }}']
                labels:
                  deployment: '{{ deployment_name }}'
                  service: 'cometbft'
                  environment: 'preview'
                  dango_network: '{{ dango_network }}'
            dest: "{{ prometheus_dir }}/targets/{{ deployment_name }}-cometbft.yml"
            owner: "{{ deploy_user }}"
            group: "{{ deploy_user }}"
        - name: Create Postgres prometheus targets
          when: deploy_includes_postgres
          copy:
            content: |
              - targets: ['{{ tailscale_ip }}:{{ db_metrics_port }}']
                labels:
                  deployment: '{{ deployment_name }}'
                  service: 'postgres'
                  environment: 'preview'
                  dango_network: '{{ dango_network }}'
            dest: "{{ prometheus_dir }}/targets/{{ deployment_name }}-postgres.yml"
            owner: "{{ deploy_user }}"
            group: "{{ deploy_user }}"
        - name: Create Clickhouse prometheus targets
          when: deploy_includes_clickhouse
          copy:
            content: |
              - targets: ['{{ tailscale_ip }}:{{ clickhouse_metrics_port }}']
                labels:
                  deployment: '{{ deployment_name }}'
                  service: 'clickhouse'
                  environment: 'preview'
                  dango_network: '{{ dango_network }}'
            dest: "{{ prometheus_dir }}/targets/{{ deployment_name }}-clickhouse.yml"
            owner: "{{ deploy_user }}"
            group: "{{ deploy_user }}"
      when:
        - hostvars[groups['full-app'][0]]['expose_ports'] == true
      become: true
      become_user: root
