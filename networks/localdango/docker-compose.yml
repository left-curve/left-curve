services:
  db:
    image: postgres:17
    shm_size: 1gb
    ports:
      # For security reasons, postgres should only accept connections from localhost.
      - 127.0.0.1:5432:5432
    volumes:
      - ./data/db:/var/lib/postgresql/data
      # For when we'll need an init script ran at initialization
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=grug_dev
    tty: true
    networks:
      - dango

  dango:
    image: ghcr.io/left-curve/left-curve/dango:latest
    depends_on:
      - db
    ports:
      - 127.0.0.1:8080:8080
    volumes:
      - ./configs/dango/config:/root/.dango/config
      - ./data/dango/data:/root/.dango/data
      - ./data/dango/indexer:/root/.dango/indexer
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_NAME=grug_dev
      - INDEXER__DATABASE_URL=postgres://postgres@db:5432/grug_dev
    tty: true
    networks:
      - dango

  cometbft:
    image: ghcr.io/left-curve/left-curve/cometbft:v0.38.17
    depends_on:
      - dango
    ports:
      - 127.0.0.1:26657:26657
    volumes:
      - ./configs/cometbft/config:/home/cometbft/.cometbft/config
      - ./data/cometbft/data:/home/cometbft/.cometbft/data
    tty: true
    networks:
      - dango

  prometheus:
    image: prom/prometheus:latest
    profiles: ["analytics"]
    container_name: prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts:/etc/prometheus/alerts
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring
      - dango

  grafana:
    image: grafana/grafana:latest
    profiles: ["analytics"]
    container_name: grafana
    restart: always
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    profiles: ["analytics"]
    container_name: alertmanager
    ports:
      - "127.0.0.1:9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - '--storage.path=/alertmanager'
    networks:
      - monitoring

  push_gateway:
    image: prom/pushgateway:latest
    profiles: ["analytics"]
    restart: always
    ports:
      - "127.0.0.1:9091:9091"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  monitoring:
    driver: bridge
  dango:
    driver: bridge
